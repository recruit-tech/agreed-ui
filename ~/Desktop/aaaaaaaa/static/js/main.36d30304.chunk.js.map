{"version":3,"sources":["components/MethodLabel/index.js","components/Navigation/index.js","components/Definitions/index.js","components/Body/index.js","components/Request/index.js","components/Response/index.js","components/Agree/index.js","components/Agrees/index.js","components/App/index.js","index.js"],"names":["MethodLabel","_ref","m","method","toLowerCase","react_default","a","createElement","className","concat","toUpperCase","StatusLabel","status","Math","floor","NaviItem","_ref2","agree","href","id","components_MethodLabel","request","title","path","GroupedItem","_ref3","Navigation_StatusLabel","response","Details","_ref4","agrees","_path$split","split","_path$split2","Object","slicedToArray","name","open","length","map","i","Navigation_GroupedItem","key","Grouped","_ref5","grouped","list","ret","len","item","toConsumableArray","groupByRequestPath","pathList","keys","Fragment","Navigation_Details","Navigation","_ref6","Navigation_Grouped","Navigation_NaviItem","Definitions","description","children","Body","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selected","setState","_this2","arguments","undefined","formatted","schema","flowtype","classNames","onlyButton","onClick","disabled","lib_default","data","shouldExpandNode","keyName","level","Component","Request","headers","headers_formatted","query","components_Definitions","entries","k","v","JSON","stringify","components_Body","Response","Agree","components_Request","components_Response","Agrees","components_Agree","shoudDisplay","search","value","indexOf","insertId","objectSpread","App","defaultTitle","agreesFiltered","window","TITLE","localStorage","getItem","document","Array","isArray","AGREES","axios","get","then","check","filter","filterAgrees","setItem","_this3","_this$state","components_Agrees","type","placeholder","onChange","e","onSearchTextChange","target","checked","onFilterChange","components_Navigation","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.36d30304.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nfunction MethodLabel({ method }) {\n  const m = method.toLowerCase()\n  return <span className={`method ${m}`}>{m.toUpperCase()}</span>\n}\n\nMethodLabel.propTypes = {\n  method: PropTypes.string.isRequired,\n}\n\nexport default MethodLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\nimport MethodLabel from '../MethodLabel'\n\nconst groupByRequestPath = (list) => {\n  const ret = {}\n  for(let i = 0, len = list.length; i < len; i++) {\n    const item = list[i]\n    const key = `${item.request.path}_${item.request.method}`\n    ret[key] = [...(ret[key] || []), item]\n  }\n  return ret\n}\n\nconst StatusLabel = ({status}) => (\n  <span className={`statusLabel statusLabel--${Math.floor(status/100)}`}>{status}</span>\n)\n\nStatusLabel.propTypes = {\n  status: PropTypes.number.isRequired,\n}\n\nconst NaviItem = ({ agree }) => (\n  <p>\n    <a href={`#${agree.id}`}>\n      <MethodLabel method={agree.request.method} />\n      <span>{agree.title || agree.request.path}</span>\n    </a>\n  </p>\n)\n\nNaviItem.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nconst GroupedItem = ({ agree }) => (\n  <p>\n    <a href={`#${agree.id}`}>\n      <StatusLabel status={agree.response.status} />\n      <span>{agree.title || 'no title'}</span>\n    </a>\n  </p>\n)\n\nGroupedItem.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nconst Details = ({path, agrees}) => { \n  const [name, method] = path.split('_')\n  return (\n    <details open>\n      <summary>\n        <MethodLabel method={method} />\n        <span>{name}</span>\n        { agrees.length > 1 && <span className=\"count\">{agrees.length}</span>}\n      </summary>\n        {agrees.map((agree, i) =>\n          <GroupedItem key={agree.id} agree={agree} />\n        )}\n    </details>\n  )\n}\n\nDetails.propTypes = {\n  path: PropTypes.string.isRequired,\n  agrees: PropTypes.array.isRequired,\n}\n\nconst Grouped = ({agrees}) => {\n  const grouped = groupByRequestPath(agrees)\n  const pathList = Object.keys(grouped)\n  return (\n    <React.Fragment>\n      {pathList.map((path, i) => <Details key={path} path={path} agrees={grouped[path]} /> )}\n    </React.Fragment>\n  )\n}\n\nGrouped.propTypes = {\n  agrees: PropTypes.array.isRequired,\n}\n\nfunction Navigation({ agrees, grouped }) {\n  return (\n    <nav>\n      { grouped\n        ? <Grouped agrees={agrees} />\n        : agrees.map((agree, i) => <NaviItem key={i} agree={agree} />)\n      }\n    </nav>\n  )\n}\n\nNavigation.propTypes = {\n  agrees: PropTypes.array.isRequired,\n  grouped: PropTypes.bool.isRequired,\n}\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nconst Definitions = ({ title, description, children }) => {\n  return (\n    <section className=\"definitions\">\n      <h1>{title}</h1>\n      {description && <p>{description}</p>}\n      {children}\n    </section>\n  )\n}\n\nDefinitions.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  children: PropTypes.any,\n}\n\nexport default Definitions\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport JSONTree from 'react-json-tree'\nimport classNames from 'classnames'\nimport './styles.css'\n\nclass Body extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: 'body' }\n  }\n\n  onClick(selected) {\n    this.setState({ selected })\n  }\n\n  render({ formatted, schema, flowtype } = this.props) {\n    const { selected } = this.state\n    return (\n      <section className=\"body\">\n        <div className=\"buttonGroup\">\n          <button\n            className={classNames('tabButton', {\n              onlyButton: !schema,\n            })}\n            onClick={() => this.onClick('body')}\n            disabled={selected === 'body'}>\n            body\n          </button>\n          {schema && (\n            <button\n              className=\"tabButton\"\n              onClick={() => this.onClick('schema')}\n              disabled={selected === 'schema'}>\n              schema\n            </button>\n          )}\n          {flowtype && (\n            <button\n              className=\"tabButton\"\n              onClick={() => this.onClick('flowtype')}\n              disabled={selected === 'flowtype'}>\n              flowtype\n            </button>\n          )}\n        </div>\n        {selected === 'schema' && (\n          <div className=\"code\">\n            <JSONTree\n              data={schema}\n              shouldExpandNode={(keyName, data, level) => level < 2}\n            />\n          </div>\n        )}\n        {selected === 'flowtype' && <pre className=\"code\">{flowtype}</pre>}\n        {selected === 'body' && (\n\n          <div className=\"code\">\n            {(formatted instanceof Object)\n              ? <JSONTree\n                  data={formatted}\n                  shouldExpandNode={(keyName, data, level) => level < 2}\n                />\n              : formatted\n            }\n          </div>\n        )}\n      </section>\n    )\n  }\n}\n\nBody.propTypes = {\n  formatted: PropTypes.any.isRequired,\n  schema: PropTypes.object,\n  flowtype: PropTypes.any,\n}\n\nexport default Body\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Definitions from '../Definitions'\nimport Body from '../Body'\n\nconst Request = ({ data }) => {\n  const { method, path, headers_formatted: headers, query, formatted, schema } = data\n  return (\n    <div>\n      <Definitions title=\"method\" description={method.toUpperCase()} />\n      <Definitions title=\"path\" description={path} />\n      {query && !!Object.keys(query).length && (\n        <Definitions title=\"query\">\n          {Object.entries(query).map(([k, v]) => (\n            <dl key={k}>\n              <dt>{k}</dt>\n              <dd>{JSON.stringify(v)}</dd>\n            </dl>\n          ))}\n        </Definitions>\n      )}\n      {headers && !!Object.keys(headers).length && (\n        <Definitions title=\"headers\">\n          {Object.entries(headers).map(([k, v]) => (\n            <dl key={k}>\n              <dt>{k}</dt>\n              <dd>{JSON.stringify(v)}</dd>\n            </dl>\n          ))}\n        </Definitions>\n      )}\n      {formatted && <Body formatted={formatted} schema={schema} />}\n    </div>\n  )\n}\n\nRequest.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default Request\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Definitions from '../Definitions'\nimport Body from '../Body'\n\nconst Response = ({ data }) => {\n  const { status, formatted, schema, flowtype } = data\n  return (\n    <div>\n      <Definitions title=\"statusCode\" description={`${status}`} />\n      {formatted && (\n        <Body formatted={formatted} schema={schema} flowtype={flowtype} />\n      )}\n    </div>\n  )\n}\n\nResponse.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default Response\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Request from '../Request'\nimport Response from '../Response'\nimport MethodLabel from '../MethodLabel'\nimport './styles.css'\n\nconst Agree = ({ agree }) => {\n  const path = agree.request.path\n  const status = agree.response.status\n  return (\n    <section className=\"agree\" id={agree.id}>\n      <h1 className=\"title\">\n        <MethodLabel method={agree.request.method} status={status} />\n        {agree.title || path}\n      </h1>\n      <div className=\"description\">\n        {agree.description || 'no description.'}\n      </div>\n\n      <h2>Request</h2>\n      <Request data={agree.request} />\n      <h2>Response</h2>\n      <Response data={agree.response} />\n    </section>\n  )\n}\n\nAgree.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nexport default Agree\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Agree from '../Agree'\nimport './styles.css'\n\nfunction Agrees({ agrees }) {\n  return (\n    <div className=\"contents\">\n      {agrees.map((agree) => <Agree key={agree.id} agree={agree} />)}\n    </div>\n  )\n}\n\nAgrees.propTypes = {\n  agrees: PropTypes.array.isRequired,\n}\n\nexport default Agrees\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './styles.css'\n\nimport Navigation from '../Navigation'\nimport Agrees from '../Agrees'\n\nconst titlePlaceHolder = '\"<%= title %>\"'\n\nconst filterAgrees = (search, agrees) => {\n  if (!search) return null\n\n  const check = shoudDisplay(search)\n\n  return agrees.filter(\n    (agree) =>\n      check(agree.title) ||\n      check(agree.request.path) ||\n      check(agree.request.method),\n  )\n}\n\nconst shoudDisplay = (search) => (value) => value && value.indexOf(search) > -1\n\nconst insertId = (agrees) => agrees.map((agree, i) => ({...agree, id: `agree_${i}`}))\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      agrees: null,\n      search: '',\n      grouped: false,\n      agreesFiltered: null,\n      title: '',\n    }\n  }\n\n  defaultTitle = 'Agreed UI'\n\n  componentDidMount() {\n    const title = window.TITLE === titlePlaceHolder ? '' : (window.TITLE || '')\n\n    const grouped = localStorage.getItem('grouped') === 'true' || this.state.grouped\n\n    if (title) document.title = title\n\n    if (Array.isArray(window.AGREES)) {\n      return this.setState({ title, grouped, agrees: insertId(window.AGREES) })\n    }\n\n    axios\n      .get('agrees')\n      .then(({ data }) => this.setState({ title, grouped, agrees: insertId(data) }))\n  }\n\n  onSearchTextChange(value) {\n    this.setState({\n      search: value,\n      agreesFiltered: filterAgrees(value, this.state.agrees),\n    })\n  }\n\n  onFilterChange(value) {\n    localStorage.setItem('grouped', value)\n    this.setState({\n      grouped: value,\n    })\n  }\n\n  render() {\n    const { agrees, agreesFiltered, title, search, grouped } = this.state\n    if (!agrees) return null\n\n    return (\n      <div className=\"wrap\">\n        <header>\n          <h1>{title || this.defaultTitle}</h1>\n          {title && <p>{this.defaultTitle}</p>}\n        </header>\n        <div className=\"container\">\n          <main>\n            <Agrees agrees={agreesFiltered || agrees} />\n          </main>\n          <aside>\n            <p>Navigations</p>\n            <section className=\"search\">\n              <input\n                type=\"search\"\n                className=\"search__input\"\n                placeholder=\"Search\"\n                value={search}\n                onChange={(e) => this.onSearchTextChange(e.target.value)}\n              />\n              <span className=\"search__group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={grouped}\n                    onChange={(e) => this.onFilterChange(e.target.checked)} />\n                    &nbsp;group by request.path\n                </label>\n              </span>\n            </section>\n            <Navigation grouped={grouped} agrees={agreesFiltered || agrees} />\n          </aside>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}