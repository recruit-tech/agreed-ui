{"version":3,"sources":["components/MethodLabel/index.js","components/Navigation/index.js","components/Definitions/index.js","components/Body/index.js","components/Request/index.js","components/Response/index.js","components/Agree/index.js","components/Agrees/index.js","components/App/index.js","index.js"],"names":["MethodLabel","m","method","toLowerCase","className","toUpperCase","StatusLabel","status","Math","floor","NaviItem","agree","href","id","request","title","path","GroupedItem","response","Details","agrees","split","name","open","length","map","i","key","Grouped","grouped","list","ret","len","item","groupByRequestPath","pathList","Object","keys","Fragment","Navigation","Definitions","description","children","Body","props","state","selected","this","setState","formatted","schema","flowtype","classNames","onlyButton","onClick","disabled","data","shouldExpandNode","keyName","level","Component","Request","headers","headers_formatted","query","entries","k","v","JSON","stringify","Response","Agree","Agrees","filterAgrees","search","check","shoudDisplay","filter","value","indexOf","insertId","App","defaultTitle","agreesFiltered","window","TITLE","localStorage","getItem","document","Array","isArray","AGREES","axios","get","then","setItem","type","placeholder","onChange","e","onSearchTextChange","target","checked","onFilterChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3efacef9.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nfunction MethodLabel({ method }) {\n  const m = method.toLowerCase()\n  return <span className={`method ${m}`}>{m.toUpperCase()}</span>\n}\n\nMethodLabel.propTypes = {\n  method: PropTypes.string.isRequired,\n}\n\nexport default MethodLabel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\nimport MethodLabel from '../MethodLabel'\n\nconst groupByRequestPath = (list) => {\n  const ret = {}\n  for(let i = 0, len = list.length; i < len; i++) {\n    const item = list[i]\n    const key = `${item.request.path}_${item.request.method}`\n    ret[key] = [...(ret[key] || []), item]\n  }\n  return ret\n}\n\nconst StatusLabel = ({status}) => (\n  <span className={`statusLabel statusLabel--${Math.floor(status/100)}`}>{status}</span>\n)\n\nStatusLabel.propTypes = {\n  status: PropTypes.number.isRequired,\n}\n\nconst NaviItem = ({ agree }) => (\n  <p>\n    <a href={`#${agree.id}`}>\n      <MethodLabel method={agree.request.method} />\n      <span>{agree.title || agree.request.path}</span>\n    </a>\n  </p>\n)\n\nNaviItem.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nconst GroupedItem = ({ agree }) => (\n  <p>\n    <a href={`#${agree.id}`}>\n      <StatusLabel status={agree.response.status} />\n      <span>{agree.title || 'no title'}</span>\n    </a>\n  </p>\n)\n\nGroupedItem.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nconst Details = ({path, agrees}) => { \n  const [name, method] = path.split('_')\n  return (\n    <details open>\n      <summary>\n        <MethodLabel method={method} />\n        <span>{name}</span>\n        { agrees.length > 1 && <span className=\"count\">{agrees.length}</span>}\n      </summary>\n        {agrees.map((agree, i) =>\n          <GroupedItem key={agree.id} agree={agree} />\n        )}\n    </details>\n  )\n}\n\nDetails.propTypes = {\n  path: PropTypes.string.isRequired,\n  agrees: PropTypes.array.isRequired,\n}\n\nconst Grouped = ({agrees}) => {\n  const grouped = groupByRequestPath(agrees)\n  const pathList = Object.keys(grouped)\n  return (\n    <React.Fragment>\n      {pathList.map((path, i) => <Details key={path} path={path} agrees={grouped[path]} /> )}\n    </React.Fragment>\n  )\n}\n\nGrouped.propTypes = {\n  agrees: PropTypes.array.isRequired,\n}\n\nfunction Navigation({ agrees, grouped }) {\n  return (\n    <nav>\n      { grouped\n        ? <Grouped agrees={agrees} />\n        : agrees.map((agree, i) => <NaviItem key={i} agree={agree} />)\n      }\n    </nav>\n  )\n}\n\nNavigation.propTypes = {\n  agrees: PropTypes.array.isRequired,\n  grouped: PropTypes.bool.isRequired,\n}\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nconst Definitions = ({ title, description, children }) => {\n  return (\n    <section className=\"definitions\">\n      <h1>{title}</h1>\n      {description && <p>{description}</p>}\n      {children}\n    </section>\n  )\n}\n\nDefinitions.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  children: PropTypes.any,\n}\n\nexport default Definitions\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport JSONTree from 'react-json-tree'\nimport classNames from 'classnames'\nimport './styles.css'\n\nclass Body extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: 'body' }\n  }\n\n  onClick(selected) {\n    this.setState({ selected })\n  }\n\n  render({ formatted, schema, flowtype } = this.props) {\n    const { selected } = this.state\n    return (\n      <section className=\"body\">\n        <div className=\"buttonGroup\">\n          <button\n            className={classNames('tabButton', {\n              onlyButton: !schema,\n            })}\n            onClick={() => this.onClick('body')}\n            disabled={selected === 'body'}>\n            body\n          </button>\n          {schema && (\n            <button\n              className=\"tabButton\"\n              onClick={() => this.onClick('schema')}\n              disabled={selected === 'schema'}>\n              schema\n            </button>\n          )}\n          {flowtype && (\n            <button\n              className=\"tabButton\"\n              onClick={() => this.onClick('flowtype')}\n              disabled={selected === 'flowtype'}>\n              flowtype\n            </button>\n          )}\n        </div>\n        {selected === 'schema' && (\n          <div className=\"code\">\n            <JSONTree\n              data={schema}\n              shouldExpandNode={(keyName, data, level) => level < 2}\n            />\n          </div>\n        )}\n        {selected === 'flowtype' && <pre className=\"code\">{flowtype}</pre>}\n        {selected === 'body' && (\n\n          <div className=\"code\">\n            {(formatted instanceof Object)\n              ? <JSONTree\n                  data={formatted}\n                  shouldExpandNode={(keyName, data, level) => level < 2}\n                />\n              : formatted\n            }\n          </div>\n        )}\n      </section>\n    )\n  }\n}\n\nBody.propTypes = {\n  formatted: PropTypes.any.isRequired,\n  schema: PropTypes.object,\n  flowtype: PropTypes.any,\n}\n\nexport default Body\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Definitions from '../Definitions'\nimport Body from '../Body'\n\nconst Request = ({ data }) => {\n  const { method, path, headers_formatted: headers, query, formatted, schema } = data\n  return (\n    <div>\n      <Definitions title=\"method\" description={method.toUpperCase()} />\n      <Definitions title=\"path\" description={path} />\n      {query && !!Object.keys(query).length && (\n        <Definitions title=\"query\">\n          {Object.entries(query).map(([k, v]) => (\n            <dl key={k}>\n              <dt>{k}</dt>\n              <dd>{JSON.stringify(v)}</dd>\n            </dl>\n          ))}\n        </Definitions>\n      )}\n      {headers && !!Object.keys(headers).length && (\n        <Definitions title=\"headers\">\n          {Object.entries(headers).map(([k, v]) => (\n            <dl key={k}>\n              <dt>{k}</dt>\n              <dd>{JSON.stringify(v)}</dd>\n            </dl>\n          ))}\n        </Definitions>\n      )}\n      {formatted && <Body formatted={formatted} schema={schema} />}\n    </div>\n  )\n}\n\nRequest.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default Request\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Definitions from '../Definitions'\nimport Body from '../Body'\n\nconst Response = ({ data }) => {\n  const { status, formatted, schema, flowtype } = data\n  return (\n    <div>\n      <Definitions title=\"statusCode\" description={`${status}`} />\n      {formatted && (\n        <Body formatted={formatted} schema={schema} flowtype={flowtype} />\n      )}\n    </div>\n  )\n}\n\nResponse.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default Response\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Request from '../Request'\nimport Response from '../Response'\nimport MethodLabel from '../MethodLabel'\nimport './styles.css'\n\nconst Agree = ({ agree }) => {\n  const path = agree.request.path\n  const status = agree.response.status\n  return (\n    <section className=\"agree\" id={agree.id}>\n      <h1 className=\"title\">\n        <MethodLabel method={agree.request.method} status={status} />\n        {agree.title || path}\n      </h1>\n      <div className=\"description\">\n        {agree.description || 'no description.'}\n      </div>\n\n      <h2>Request</h2>\n      <Request data={agree.request} />\n      <h2>Response</h2>\n      <Response data={agree.response} />\n    </section>\n  )\n}\n\nAgree.propTypes = {\n  agree: PropTypes.object.isRequired,\n}\n\nexport default Agree\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Agree from '../Agree'\nimport './styles.css'\n\nfunction Agrees({ agrees }) {\n  return (\n    <div className=\"contents\">\n      {agrees.map((agree) => <Agree key={agree.id} agree={agree} />)}\n    </div>\n  )\n}\n\nAgrees.propTypes = {\n  agrees: PropTypes.array.isRequired,\n}\n\nexport default Agrees\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './styles.css'\n\nimport Navigation from '../Navigation'\nimport Agrees from '../Agrees'\n\nconst titlePlaceHolder = '\"<%= title %>\"'\n\nconst filterAgrees = (search, agrees) => {\n  if (!search) return null\n\n  const check = shoudDisplay(search)\n\n  return agrees.filter(\n    (agree) =>\n      check(agree.title) ||\n      check(agree.request.path) ||\n      check(agree.request.method),\n  )\n}\n\nconst shoudDisplay = (search) => (value) => value && value.indexOf(search) > -1\n\nconst insertId = (agrees) => agrees.map((agree, i) => ({...agree, id: `agree_${i}`}))\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      agrees: null,\n      search: '',\n      grouped: false,\n      agreesFiltered: null,\n      title: '',\n    }\n  }\n\n  defaultTitle = 'Agreed UI'\n\n  componentDidMount() {\n    const title = window.TITLE === titlePlaceHolder ? '' : (window.TITLE || '')\n\n    const grouped = localStorage.getItem('grouped') === 'true' || this.state.grouped\n\n    if (title) document.title = title\n\n    if (Array.isArray(window.AGREES)) {\n      return this.setState({ title, grouped, agrees: insertId(window.AGREES) })\n    }\n\n    axios\n      .get('agrees')\n      .then(({ data }) => this.setState({ title, grouped, agrees: insertId(data) }))\n  }\n\n  onSearchTextChange(value) {\n    this.setState({\n      search: value,\n      agreesFiltered: filterAgrees(value, this.state.agrees),\n    })\n  }\n\n  onFilterChange(value) {\n    localStorage.setItem('grouped', value)\n    this.setState({\n      grouped: value,\n    })\n  }\n\n  render() {\n    const { agrees, agreesFiltered, title, search, grouped } = this.state\n    if (!agrees) return null\n\n    return (\n      <div className=\"wrap\">\n        <header>\n          <h1>{title || this.defaultTitle}</h1>\n          {title && <p>{this.defaultTitle}</p>}\n        </header>\n        <div className=\"container\">\n          <main>\n            <Agrees agrees={agreesFiltered || agrees} />\n          </main>\n          <aside>\n            <p>Navigations</p>\n            <section className=\"search\">\n              <input\n                type=\"search\"\n                className=\"search__input\"\n                placeholder=\"Search\"\n                value={search}\n                onChange={(e) => this.onSearchTextChange(e.target.value)}\n              />\n              <span className=\"search__group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={grouped}\n                    onChange={(e) => this.onFilterChange(e.target.checked)} />\n                    &nbsp;group by request.path\n                </label>\n              </span>\n            </section>\n            <Navigation grouped={grouped} agrees={agreesFiltered || agrees} />\n          </aside>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}